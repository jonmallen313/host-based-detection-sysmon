Host-Based Detection with Sysmon

Project Overview:
- This project demonstrates the use of Sysmon for detecting malicious activities on Windows systems.
- Sysmon (System Monitor) is a Windows system service and device driver that logs system activity to the Windows event log.
- The project focuses on detecting key attack behaviors such as persistence, lateral movement, and the execution of malicious programs.
- Custom Sysmon configuration is used to log relevant events such as process creation, registry modifications, and network connections.

Tools Used:
- Sysmon (System Monitor)
- PowerShell
- Event Viewer
- Windows Registry
- Custom Scripts for Testing Attacks

Key Concepts and Techniques:
1. **Persistence via Registry Modification**:
   - Created a registry entry to run a malicious program automatically on user login.
   - Detectable by Sysmon through registry modification events and process creation logs.

2. **Persistence via Path Injection**:
   - Modified the system path to inject a payload, ensuring it runs automatically.
   - Sysmon logs relevant events related to environment variable changes and process execution.

3. **Lateral Movement using Named Pipes**:
   - Used a pipe server and client for inter-process communication as part of lateral movement.
   - Sysmon can detect this by monitoring inter-process communication and network connections.

4. **Execution via PowerShell**:
   - Executed programs (e.g., Notepad and Calculator) using PowerShellâ€™s `Start-Process` cmdlet.
   - This action was logged by Sysmon, which detects process creation events.

Detection Setup:
- Sysmon was configured to monitor and log specific events:
   - **Event ID 1**: Process creation
   - **Event ID 11**: File creation time (detecting file creation)
   - **Event ID 10**: Registry key modification
   - **Event ID 3**: Network connection events
   - Additional custom filters were applied to detect suspicious behaviors, such as the execution of known tools or modifications to system paths.

Scripts Folder:
- Contains PowerShell scripts for demonstrating different attack techniques such as registry modifications, creating persistence via path injection, and running PowerShell commands for testing Sysmon's ability to detect these activities.

Testing and Results:
- The following attacks were tested and detected by Sysmon:
   1. **Persistence via Registry**: Creating a registry entry to run a malicious executable on user login was detected.
   2. **Persistence via Path Injection**: Modifying the system path to execute a malicious program was logged.
   3. **Pipe Server and Client**: Running a pipe server and client for lateral movement showed Sysmon detecting inter-process communication events.
   4. **Execution via PowerShell**: The creation of processes like Notepad and Calculator via PowerShell was logged in Sysmon.

Future Enhancements:
- Expand Sysmon configuration to cover more attack techniques and finer detection rules.
- Implement integration with SIEM (Security Information and Event Management) systems for real-time alerts.

Conclusion:
- This project demonstrates the effectiveness of Sysmon in detecting a range of attack techniques.
- By leveraging Sysmon's detailed logging, organizations can identify potentially malicious behaviors on their systems, providing critical information for threat hunting and incident response.

